//
//  OrderModels.swift
//  OnlineStore.2.0
//
//  Created by Dario Marquez on 14/9/25.
//

import Foundation

// ğŸ”¹ Estados posibles de una lÃ­nea/pedido
enum OrderStatus: String, CaseIterable {
    case esperandoPicking = "Esp. Picking"
    case enPicking = "En Picking"
    case endedPicking = "Picking Finalizado"
    case esperandoReposicion = "ReposiciÃ³n"
    case esperandoCliente = "Esp. Cliente"
    case esperandoPacking = "Esp. Packing"
    case enPacking = "En Packing"
    case hecho = "Hechos"
}

// ğŸ”¹ Tipo de entrega: envÃ­o a domicilio o recogida en tienda
enum DeliveryType: String, CaseIterable {
    case envio = "EnvÃ­o"
    case recogida = "Recogida"
}

// ğŸ”¹ LÃ­nea de pedido, con su estado propio
struct OrderLine: Identifiable {
    let id = UUID()
    var status: OrderStatus
}

// ğŸ”¹ Pedido, compuesto por varias lÃ­neas
struct Order: Identifiable {
    let id: String              // nÃºmero de pedido en formato 12 dÃ­gitos
    let date: Date
    var lines: [OrderLine]
    var deliveryType: DeliveryType   // tipo de entrega

    /// Estado del pedido = el estado mÃ¡s bajo de todas sus lÃ­neas
    var status: OrderStatus {
        lines.map { $0.status }.min { lhs, rhs in
            OrderStatus.allCases.firstIndex(of: lhs)! < OrderStatus.allCases.firstIndex(of: rhs)!
        } ?? .esperandoPicking
    }
}
